yoni.pushett
achsaf.atzmon


=================================
=      UML Before vs. After     =
=================================
In terms of the general structure we were expecting to have alot more encapsulation (i.e. Sky has-a Sun
has-a SunHalo)and were suprised to find that the gameManager held most of the game objects. We also expected
that more classes would be needed to extend Block, based on each one's needs. As the project progressed we
added an additional class to the util package.


===========================
=      Infinite World     =
===========================
The currently existing terrain and trees are saved in Hashmaps that save the blocks of the terrain column or
tree according to their x coordinate in the world.
using these hashmaps, when new terrain and trees are created the old ones are removed.
As the avatar approaches the edge of the currently rendered world more of it is rendered before the
window exposes the edge.


==================
=      Trees     =
==================
The package consists of the classes Tree and Leaf.
We thought it made the most sense to encapsulate the animations of the leaves in their own class, therefore
we created the leaves their own class. This also allowed us to override the update method and detect a
collision with the ground which was necessary to properly animate the leaves.
The rest of the tree (the bark) were basic blocks, like the ground and therefore did not require their own
class. The Tree class receives the groundHeightAt function in order to determine the at what height to place
the tree at a given x coordinate.


===========================
=      Design Choices     =
===========================
To improve performance we remove blocks that are not seen (i.e. if the Avatar is moving left blocks that
leave the right side of the screen will be removed).
Also to improve performance only the top layer of the ground collides with leaves.
Sometimes the avatar would fall through the ground because the game "missed" the collision with the ground.
So we implemented a softLanding method that slows down the avatars speed just before it reaches the ground
so the game will not "miss" the collision.
